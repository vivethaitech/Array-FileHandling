1. startsWith() method 

public class Starts {
public static void main(String[] args) {
String s1 = "Stay happy, stay unwinded, stay focused and creative";
String s2 = "Stay";
char[] c1 = s1.toCharArray();
char[] c2 = s2.toCharArray();
boolean starts = true;
for(int i=0,j=0; j<c2.length; i++,j++) {
if(c1[i]==c2[j]) {
continue;
}
else {
starts=false;
System.out.println("Not starts with");
break;
}
}
if(starts) {
System.out.println("Starts with");
}
}
}
----------------------------------------------------------------------------------
2. endsWith() method

public class Ends {
public static void main(String[] args) {
String s1 = "Stay happy, stay unwinded, stay focused and creative";
String s2 = "creative";
char[] c1 = s1.toCharArray();
char[] c2 = s2.toCharArray();
boolean ends = true;
for(int i=c1.length-1,j=c2.length-1;j>=0;i--,j--) {
if(c1[i]==c2[j]) {
continue;
}
else {
ends=false;
System.out.println("Not ends with");
break;
}
}
if(ends) {
System.out.println("ends with");
}
}
}
----------------------------------------------------------------------------------
3.trim() method

public class Trim {
public static void main(String[] args) {
String s1 = "    Stay happy, stay unwinded, stay focused and creative  ";
char[] ch =s1.toCharArray();
int first=0;
for(int i=0;i<ch.length;i++) {
if(ch[i]!=' ') {
first=i;
break;
}
}
int last=0;
for(int i=ch.length-1;i>0;i--) {
if(ch[i]!=' ') {
last=i;
break;
}
}
for(int i=first;i<=last;i++) {
System.out.print(ch[i]);
}
}
}
-------------------------------------------------------------------------------
4.stripLeading() method

public class Leading {
public static void main(String[] args) {
String s1 = "    Stay happy, stay unwinded, stay focused and creative";
for(int i=0;i<s1.length();i++) {
if(s1.charAt(i)!=' ') {
for(int j=i;j<s1.length();j++) {
System.out.print(s1.charAt(j));
}
break;
}
}
}
}
------------------------------------------------------------------------------
5.stripTrailing() method

public class Trailing {
public static void main(String[] args) {
String s1 = "Stay happy, stay unwinded, stay focused and creative       ";
for(int i=s1.length()-1;i>0;i--) {
if(s1.charAt(i)!=' ') {
for(int j=0;j<=i;j++) {
System.out.print(s1.charAt(j));
}
break;
}
}
}
}
---------------------------------------------------------------------------------
6.reverse() method

public class Reverse{
public static void main(String[] args){
String str = "vivetha";
char[] ch = str.toCharArray();
char[] ch2 = new char[ch.length];
for(int i=0;i<ch.length;i++)
{
ch2[i]=ch[ch.length-1-i];
}
for(int i=0;i<ch2.length;i++){
System.out.print(ch2[i]);
}
}
}
----------------------------------------------------------------------------------
7. Anagram 

public class Anagram {

public static void main(String[] args) {
		
String word1 = "pool";
String word2 = "loop";
char[] ch1 = word1.toCharArray();
char[] ch2 = word2.toCharArray();
int count = 0;
for(int j=0;j<word2.length();j++) {
for(int i=0;i<word1.length();i++) {
if(ch2[j]==ch1[i]) {
ch1[i]='*';
count++;
}
}
}
if(count==word1.length() && word1.length()==word2.length()) {
System.out.println("Yes, It is anagram");
}
else {
System.out.println("No, It is not anagram");
}
}
}
---------------------------------------------------------------------------------------
8. convert to upperCase
public class UpperCaseArray {

public static void main(String[] args) {
String name = "vivetha";
char ch[] = name.toCharArray();
for(int i=0; i<name.length();i++){
if(ch[i]>='a' && ch[i]<='z')
{
System.out.print((char)(ch[i]-32));
}
else{
System.out.print(ch[i]);
}
}
}
}
----------------------------------------------------------------------------------------
9. convert to lowercase

public class LowerCaseArray {

public static void main(String[] args) {
String name = "POPpy";
char[] ch = name.toCharArray();
for(int i=0;i<name.length();i++) {
if(ch[i]>='A' && ch[i] <='Z') {		
System.out.print((char)(ch[i]+32));
}
else {
System.out.print((char)(ch[i]-0));
}
}						
}
}
---------------------------------------------------------------------------------------
10. vowels and constant count

public class VowelCons {

public static void main(String[] args) {
String name = "vivetha";
char[] ch = name.toCharArray();
int vowels=0;
int constant=0;
char low;	
for (int i = 0; i < name.length(); i++) {
if (ch[i] >= 'A' && ch[i] <= 'Z') { 
low = (char)(ch[i] + 32);
} else {
low = ch[i];
}
System.out.print(low);
if (low == 'a' || low == 'e' || low == 'i' || low == 'o' || low == 'u') {
vowels++;
} else {
constant++;  
}
}
System.out.println();
System.out.println("Total vowel counts are: "+vowels);
System.out.println("Total constant counts are: "+constant);
}
}
-----------------------------------------------------------------------------------------
11. ReplaceAll() method 

public class ReplaceAll {

public static void main(String[] args) {
		
String phrase = "love is art";
String target = "art";
String replacement = "poem";
String result = "";
for(int i=0;i<phrase.length();i++) {
boolean match = true;
for(int j=0;j<target.length();j++) {
if(phrase.charAt(i+j)!=target.charAt(j)) {
match = false;
break;
}
}
if(match) {
result+=replacement;
i=i+target.length()-1;
}
else {
result +=phrase.charAt(i);
}
}
System.out.print(result);
}
}
-------------------------------------------------------------------------------------
12.Contains() method

public class ContainsArray {

public static void main(String[] args) {
String str1 = "love is art";
String str2 = "art";		
int count=0;
for(int i=0;i<str1.length();i++) {
for(int j=0;j<str2.length();j++) {
if(str1.charAt(i+j)!=str2.charAt(j)) {
break;
}
count++;
}   
}
if(count==str2.length()) {
System.out.println("yes, the word "+str2+" is in pharse");
}
else {
System.out.println("No, the word "+str2+" is not in pharse");
}
}
}
-------------------------------------------------------------------------------------
13. Palindrome in string

public class Explore {
public static void main(String[] args) {
String word ="madam";
String originalWord = word;
char[] ch = word.toCharArray();
char[] revCh = new char[ch.length];
for(int i=0;i<ch.length;i++) {
revCh[i]=ch[ch.length-1-i];
}
String arr = new String(revCh);
if(originalWord.equals(arr)) {
System.out.println("palindrome");
}
else {
System.out.println("Not a palindrome");
}
}
}
----------------------------------------------------------------------------------------
14. Continuous Duplicate Check

public class ContinuosDuplicateCheck {
public static void main(String[] args) {
String word = "kannan";//nn
boolean found = false;
for(int i=0;i<word.length()-1;i++) {
if(word.charAt(i)==word.charAt(i+1)) {
System.out.println(word +" has two continuous "+word.charAt(i)+" letters");
found = true;
break;
}
}
if(!found) {
System.out.println("no continous letters");
}
}
}
